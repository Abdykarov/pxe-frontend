/*
 -  Supply point
 -
 -
 */

// Core component import
@import 'src/assets/scss/01_base/base.scss';

// Component variables
@import 'supply-point.component.variables.scss';
@import '../button/button.component.variables.scss';

::ng-deep {
	.supply-points {
		pointer-events: none;

		&:hover .supply-point:not(:hover) {
			@include link-without-href-self {
				// Media queries
				@include media-breakpoint-up(xl) {
					background-color: $body-bg;
				}
			}

			.supply-point__inner--price {
				// Media queries
				@include media-breakpoint-up(xl) {
					background-color: rgba($white, .5);
				}
			}
		}
		
		.supply-point-box-addon {
			display: flex;
			align-items: center;
			justify-content: center;			
			height: calc(100% - #{$spacer});
			padding: ( $spacer * 1.5 );
			border-radius: $border-radius;
			box-shadow: $box-shadow;

			// Media queries
			@include media-breakpoint-up(lg) {
				padding: ( $spacer * 2 );
			}

			> :nth-child(n) {
				pointer-events: auto;
			}
		}
	}
}

.supply-point {
	@include link-without-href-self {
		pointer-events: auto;
		display: block;
		height: calc(100% - #{$spacer});
		margin-bottom: $spacer;
		background-color: $white;
		color: inherit;
		border-radius: $border-radius;
		box-shadow: $box-shadow;
		overflow: hidden;

		// Media queries
		@include media-breakpoint-down(md) {
			pointer-events: none;
		}
	}

	@include link-without-href-interactive {
		color: inherit;
		text-decoration: none;

		// Media queries
		@include media-breakpoint-up(xl) {
			box-shadow: 0 10px 20px rgba($box-shadow-color, .2);
		}

		.supply-point__inner--price {
			background-color: rgba($body-bg, .5);
		}
	}

	&__inner {
		height: 100%;
		padding: ( $spacer * 1.5 ) $spacer ( $spacer / 2 );

		// Media queries
		@include media-breakpoint-up(md) {
			padding: ( $spacer * 2.5 ) ( $spacer * 3 ) ( $spacer * 1.5 ) ( $spacer * 1.5 );
		}

		&--price {
			padding-bottom: ( $spacer * 1.5 );
			background-color: rgba($body-bg, .5);

			// Media queries
			@include media-breakpoint-up(md) {
				padding-bottom: ( $spacer * 2.5 );
			}
			@include media-breakpoint-up(xl) {
				padding-left: ( $spacer * 3 );
			}
		}
	}

	&__title,
	&__price {
		font-size: $supply-point-label-font-size;
		line-height: $supply-point-label-line-height;
	}

	&__icon {
		display: block;
		padding-top: ( ( $supply-point-title-line-height-px - $supply-point-icon-font-size ) / 2 );
		color: $icons-primary;
		font-size: $supply-point-icon-font-size;
	}

	&__title {
		display: block;
		text-transform: uppercase;

		// Media queries
		@include media-breakpoint-up(md) {
			display: inline-block;
			max-width: 100%;
			margin-right: ( $spacer * 1.25 );
			font-size: $supply-point-title-font-size;
			line-height: $supply-point-title-line-height;
		}
	}

	&__title-subtext {
		display: inline-block;
	}

	&__value-box {
		display: flex;
		flex-direction: column;
		margin-bottom: $spacer;

		// Media queries
		@include media-breakpoint-up(md) {
			padding-right: $spacer;
		}
	}

	&__value-name {
		text-transform: uppercase;
	}

	&__value {
		font-size: 1.125rem;
		line-height: ( 26 / 18 );

		// Media queries
		@include media-breakpoint-up(md) {
			font-size: $supply-point-label-font-size;
			line-height: $supply-point-label-line-height;
		}
	}

	&__price-label {
		display: flex;
		padding-bottom: ( ( $supply-point-title-line-height-px - $supply-point-title-font-size ) / 2 );
		margin-bottom: ( $spacer / 4 );
		line-height: ( 18 / 14 );

		// Media queries
		@include media-breakpoint-up(xl) {
			align-items: flex-end;
			height: $supply-point-title-line-height-px;
			margin-bottom: $spacer;
		}
	}

	&__price {
		// Media queries
		@include media-breakpoint-up(md) {
			display: block;
			font-size: $supply-point-title-font-size;
			line-height: $supply-point-title-line-height;
		}
	}

	&__addon {
		text-align: center;

		// Media queries
		@include media-breakpoint-up(md) {
			padding-top: ( ( $supply-point-title-line-height-px - $btn-height ) / 2 );
			text-align: right;
		}
		@include media-breakpoint-up(xl) {
			display: none;
		}

		> :nth-child(n) {
			pointer-events: auto;
		}
	}
}
