/*
 -  Form fields
 -
 -
 */

// Core component import
@import 'src/assets/scss/01_base/base.scss';

// Component variables
@import 'field.component.variables.scss';

// Bootstrap form import
@import '~bootstrap/scss/forms';
@import '~bootstrap/scss/custom-forms';
@import '~bootstrap/scss/input-group';

.form-container {
	max-width: $input-width;
	margin: 0 auto;
}

.form-group {
	position: relative;

	&--with-currency {
		.input-group-append {
			right: $spacer;
			background-color: transparent;

			&::after {
				background: transparent;
			}
		}
	}

	&--alone {
		padding-top: 0;
		margin-bottom: 0;

		.input-group-append {
			padding-top: 0;
		}
	}
}

.form-control {
	border-width: 0;
	border-bottom-width: $input-border-width;
	cursor: pointer;
	@include box-shadow(none);
	@include placeholder($input-placeholder-color);

	&:hover:not(:focus) {
		border-color: $input-border-color-interactive;
	}

	&:focus,
	&.focus {
		box-shadow: none;

		& ~ .input-group-append {
			color: $input-color;
		}
	}

	&[disabled],
	&[readonly],
	fieldset[disabled] & {
		color: $input-disabled-color;
		border-bottom-color: $input-disabled-border-color;
		cursor: not-allowed;
		pointer-events: none;

		& ~ .input-group-append {
			color: $input-disabled-color;
		}
	}

	&[disabled],
	&[readonly] {
		& + .control-label {
			cursor: not-allowed;
			pointer-events: none;
		}
	}

	&[readonly] {
		color: $input-color;
	}

	&::-ms-clear {
		display: none;
	}

	&--light {
		&,
		&:focus {
			background-color: $white;
		}
	}
}

.form-control-text {
	cursor: default;
	border-bottom-color: transparent;
}

textarea.form-control {
	min-height: $input-textarea-min-height;
	padding: ( ( $spacer * 2 ) + $input-border-width );
	line-height: $input-textarea-line-height;
	border-color: $input-border-color;
	border-width: $input-border-width;
	border-radius: $input-border-radius;

	&:focus,
	&.focus,
	&:hover {
		padding: ( $spacer * 2 );
	}

	& + .control-label {
		top: ( $form-group-padding-top + $spacer + ( $input-border-width * 2 ) ) ; // 26px
		left: ( ( $spacer * 2 ) + ( $input-border-width * 2 ) );
	}

	&[disabled] {
		@include placeholder($input-disabled-color);
	}
}

textarea.form-control:focus,
textarea.form-control.focus,
textarea.form-control--not-empty {
	& + .control-label {
		top: ( $spacer * 1.5 );
		left: 0;
	}
}

.control-label {
	position: absolute;
	width: 100%;
	top: 0;
	left: 0;
	margin: 0;
	font-size: $input-font-size;
	cursor: pointer;
	@include smart-short-text;
}

.radiogroup-control-label {
	position: relative;
	display: block;
	top: 0;
	margin-bottom: ( $spacer / 2 );
}

// States
.form-control {
	&.is-valid,
	&.is-warning,
	&.is-invalid {
		padding-right: $spacer;
		background-image: none;
	}

	&.is-valid {
		border-color: $input-border-color;
	}

	&.is-warning {
		border-color: $warning;
	}

	&.is-invalid {
		border-color: $danger;
	}

	&:focus,
	&.focus,
	&:hover {
		&.is-valid,
		&.is-warning,
		&.is-invalid {
			box-shadow: none;
		}

		&.is-valid {
			border-color: $success;
		}

		&.is-warning {
			border-color: $input-color-interactive-warning;
		}

		&.is-invalid {
			border-color: $input-color-interactive-invalid;
		}
	}
}

.form-control-case {
	position: relative;
	max-width: $input-width;
	padding-top: $form-group-padding-top;
}

.form-control-wrapper {
	width: 100%;
	position: relative;
	border-radius: $input-border-radius;
	overflow: hidden;

	&.disabled-input {
		& + .control-label {
			cursor: not-allowed;
			pointer-events: none;
		}
	}

	& ~ .invalid-feedback {
		display: none;
		margin-top: ( $spacer / 4 );
		font-size: $small-font-size;
		max-width: $input-width;
	}

	&.invalid-input {
		& ~ .invalid-feedback {
			display: block;
		}

		&.form-control--without-feedback ~ .invalid-feedback {
			display: none;
		}
	}
}

.form-control--with-indentation {
	padding: 0 ( $spacer * 4.5 ) 0 ( $spacer * 1.5 ) ;

	&:focus,
	&.focus,
	&:hover {
		padding-top: ( $input-padding-y + $input-border-width );
	}
}

// Input group
.input-group {
	&--append {
		.form-control {
			padding-right: ( $spacer * 2.5 );
		}
	}

	.btn {
		min-width: auto;
		background-color: transparent;
		color: $gray-400;
		border-width: 0;
		z-index: $zindex-input-group-btn;

		&:focus,
		&:hover,
		&:active {
			color: $gray-500;
		}
	}

	.form-control {
		z-index: $zindex-input-group-form-control;
	}

	.control-label {
		top: 0;
	}

	&--append-button-icon {
		// Media queries
		@include media-breakpoint-down(xs) {
			padding-right: $input-height;
		}
	}
}

.input-group-prepend,
.input-group-append {
	align-items: center;
	position: absolute;
	top: 0;
	padding: 0 ( $spacer * .75 );
	height: ( $input-height - $input-border-width );
	line-height: ( $input-height - $input-border-width + 1 );
	color: $gray-100;
	font-size: $input-font-size;
	pointer-events: none;

	&:focus,
	& > button:focus {
		outline: transparent auto 5px;
	}

	&:hover,
	& > button:hover {
		cursor: pointer;
	}
}

.input-group-append-help {
	position: absolute;
	top: $form-group-padding-top;
	right: -( $input-height );
	width: $input-height;
	height: $input-height;
	line-height: $input-height;
	text-align: center;

	// Media queries
	@include media-breakpoint-down(xs) {
		right: 0;
	}

	.btn {
		@include reset-pa-ma;
		background-color: transparent;
		border: none;
		color: $font-text;
		height: $icon-size-px;
		line-height: $icon-size-px;

		.icon {
			vertical-align: sub;
		}

		&:focus,
		&.focus {
			color: $input-focus-border-color;
		}
	}
}

.input-group-prepend {
	left: 0;

	&::after {
		left: 100%;
	}

	.btn {
		padding-left: 0;
	}
}

.input-group-append {
	right: 0;

	.btn {
		padding-right: 0;
	}
}

.input-group-switch__text {
	&--prepend {
		margin-right: ( $spacer * 5 );
	}

	&--append {
		margin-left: ( $spacer * 5 );
	}

	&--active {
		color: $primary;
	}

	&--disabled {
		color: $input-disabled-color;
		cursor: not-allowed;
		pointer-events: none;
	}
}

.custom-control-inline {
	&:last-child {
		margin-right: 0;
	}
}

// Radio & Checkbox
.custom-control {
	min-height: auto;
	padding-left: 0;
	margin-bottom: $spacer;
}

.custom-control-input[type='checkbox'],
.custom-control-input[type='radio'] {
	&:focus,
	&.focus {
		&,
		&.is-valid {
			& + .custom-control-label {
				&::before {
					border-color: $custom-control-indicator-focus-border-color;
					box-shadow: none;
				}
			}
		}

		&.is-warning + .custom-control-label {
			&::after {
				background-color: $custom-control-indicator-bg-interactive-warning;
			}
		}

		&.is-invalid + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-check-interactive-invalid;
				box-shadow: none;
			}
		}
	}

	&.is-valid + .custom-control-label {
		&:hover {
			&::before {
				border-color: $custom-control-indicator-hover-border-color;
			}
		}

		&::before {
			background-color: transparent;
			border-color: $custom-control-indicator-border-color;
		}
	}

	&.is-warning + .custom-control-label {
		&:hover {
			&::before {
				background-color: $custom-control-indicator-bg-interactive-warning;
			}
		}

		&::after {
			border-color: $custom-control-indicator-bg-warning;
		}
	}

	&.is-invalid + .custom-control-label {
		color: $input-color;

		&:hover {
			&::before {
				border-color: $custom-control-indicator-bg-check-interactive-invalid;
			}
		}
	}

	&:disabled,
	&:disabled:checked {
		& + .custom-control-label {
			cursor: not-allowed;
			pointer-events: none;

			&::before {
				border-color: $custom-control-indicator-disabled-border;
			}
		}
	}

	& + .custom-control-label {
		&:hover {
			&::before {
				border-color: $custom-control-indicator-hover-border-color;
			}
		}
	}
}

.custom-control-label {
	padding-left: ( $custom-control-indicator-size-px + ( $spacer / 2 ) );
	color: $input-color;
	font-size: $input-font-size;
	cursor: pointer;

	&:hover {
		&::before {
			border-color: $custom-control-indicator-hover-border-color;
		}
	}

	&::before,
	&::after {
		top: $custom-control-indicator-top;
		left: 0;
	}
}

// Radio
.custom-control-input[type='radio']:checked {
	&:focus,
	&.focus {
		&.is-warning + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-check-interactive-warning;
			}
		}

		&.is-invalid + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-check-interactive-invalid;
			}
		}
	}

	& + .custom-control-label {
		&::before,
		&::after {
			transition: all ease-in $animation-speed;
		}

		&::after {
			top: ( $custom-control-indicator-size-px / 2 - $custom-radio-filling-size / 2 + $custom-control-indicator-top);
			left: ( $custom-control-indicator-size-px / 2 - $custom-radio-filling-size / 2);
			width: $custom-radio-filling-size;
			height: $custom-radio-filling-size;
			background-color: $custom-radio-control-indicator-checked-bg;
			border-radius: $custom-radio-indicator-border-radius;
		}
	}

	&.is-warning {
		& + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-warning;
			}

			&:hover {
				&::before {
					border-color: $custom-control-indicator-bg-check-interactive-warning;
				}
			}
		}
	}

	&.is-invalid {
		& + .custom-control-label {
			&::after {
				background-color: $custom-control-indicator-bg-invalid;
			}

			&:hover {
				&::after {
					background-color: $custom-control-indicator-bg-check-interactive-invalid;
					border-color: $custom-control-indicator-bg-check-interactive-invalid;
				}
			}
		}
	}
}

// Radio group
.custom-radio-group__item {
	margin-bottom: ( $spacer * 2.5 );
}

// Checkbox
.custom-checkbox {
	.custom-control-label {
		&::before,
		&::after {
			transition: border ease-in $animation-speed;
		}

		&::before {
			border-radius: $custom-checkbox-indicator-border-radius;
		}
	}
}

.custom-control-input[type='checkbox']:checked {
	&:focus,
	&.focus {
		&.is-valid {
			&::after {
				background-color: $custom-control-indicator-bg;
			}
		}

		&.is-warning + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-check-interactive-warning;
			}
		}

		&.is-invalid + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-check-interactive-invalid;
			}

			&::after {
				background-color: transparent;
			}
		}
	}

	& + .custom-control-label {
		&::after {
			@include icon;
			content: '\e906';
			font-size: $custom-checkbox-icon-size;
			line-height: $custom-control-indicator-size-px;
			text-align: center;
		}
	}

	&.is-valid {
		& + .custom-control-label {
			&::before {
				background-color: $custom-control-indicator-checked-bg;
			}
		}
	}

	&.is-warning {
		& + .custom-control-label {
			&::before {
				border-color: $custom-control-indicator-bg-warning;
			}

			&:hover {
				&::before {
					border-color: $custom-control-indicator-bg-check-interactive-warning;
				}
			}
		}
	}

	&.is-invalid {
		& + .custom-control-label {
			&::before {
				background-color: transparent;
				border-color: $custom-control-indicator-bg-invalid;
			}

			&:hover {
				&::before {
					border-color: $custom-control-indicator-bg-check-interactive-invalid;
				}
			}
		}
	}
}

// Switch
.custom-checkbox--switch {
	.custom-control-input {
		& + .custom-control-label {
			width: 100%;
			display: flex;
			flex-flow: row-reverse;
			justify-content: space-between;
			align-items: center;
			padding-left: 0;
			overflow: hidden;

			&::before {
				position: relative;
				width: $custom-switch-width;
				height: $custom-switch-height;
				min-width: $custom-switch-width;
				margin: -9px 0 0 10px;
				border-radius: $custom-switch-height;
			}

			&::after {
				width: $custom-control-indicator-size-px;
				height: $custom-control-indicator-size-px;
				top: 50%;
				right: 30px;
				left: auto;
				transform: translate(0, -50%);
				background-color: $white;
				border-radius: $custom-radio-indicator-border-radius;
				box-shadow: $custom-switch-shadow;
				transition: all $animation-speed ease-in;
			}
		}
	}

	.custom-control-input {
		&:checked {
			& + .custom-control-label {
				&::after {
					content: '';
					right: 5px;
					background-color: $white;
				}
				&::before {
					background-color: $custom-switch-bg;
				}
			}
		}

		&:disabled {
			& + .custom-control-label {
				&::before {
					background-color: $custom-control-indicator-disabled-bg;
				}

				&:after {
					background-color: $white;
				}
			}
		}
	}

	&:hover,
	&:focus-within {
		.custom-control-input:not([disabled]) {
			&:checked {
				& + .custom-control-label::before {
					background-color: $custom-switch-bg-interactive;
				}
			}
		}
	}
}

// Radiogroup like toggle switch
.radio-group--switch {
	display: flex;
	flex-direction: row;
	width: auto;

	.control-label {
		display: none;
	}
}

.radio-group--switch {
	// Reset default - left + right
	.custom-control-input {
		&,
		&:checked {
			& + .custom-control-label {
				z-index: 2;
				padding-left: 0;
				position: relative;

				&::before,
				&::after {
					pointer-events: none;
					display: none;
					position: absolute;
				}
			}
		}

		&:checked {
			& + .custom-control-label {
				z-index: 1;
			}
		}
	}

	.custom-radio--switch {
		// Left toggle
		&:nth-of-type(1) {
			.custom-control-input {
				& + .custom-control-label {
					padding-right: ( $spacer * 6 ) + ( $custom-switch-width / 2 );
				}
			}
		}

		// Right toggle
		&:nth-of-type(2) {
			margin-left: -$spacer * 7;

			.custom-control-input + .custom-control-label {
				padding-left: ( $spacer * 6 ) + ( $custom-switch-width / 2 );

				&::before {
					display: block;
					width: $custom-switch-width;
					height: $custom-switch-height;
					background: $custom-switch-bg;
					border-radius: $custom-switch-height;
					top: 50%;
					left: 0;
					transform: translate(0, -50%);
					z-index: 3;
				}

				&::after {
					display: block;
					border: none;
					background-color: $white;
					width: $custom-control-indicator-size-px;
					height: $custom-control-indicator-size-px;
					top: 50%;
					left: 4px;
					transform: translate(0, -50%);
					z-index: 4;
					box-shadow: $custom-switch-shadow;
				}
			}

			.form-control--not-empty + .custom-control-label {
				&::after {
					left: 30px;
				}
			}

			.custom-control-input:disabled,
			.custom-control-input:disabled:checked {
				& + .custom-control-label::before {
					background-color: $custom-control-indicator-disabled-bg;
				}
			}
		}

		&:hover,
		&:focus-within {
			&,
			& + .custom-radio--switch {
				.custom-control-input:not([disabled]) + .custom-control-label::before {
					background-color: $custom-switch-bg-interactive;
				}
			}
		}
	}
}

// Selectbox
.select {
	position: relative;

	.select-icon {
		position: absolute;
		top: ( $input-height / 2 );
		right: 0;
		padding-right: ( $spacer / 2 );
		font-weight: $font-weight-bold;
		pointer-events: none;
	}

	select::-ms-expand {
		display: none;
	}

	.form-control {
		padding-right: ( $spacer * 1.25 );
		appearance: none;

		&,
		&:focus,
		&.focus,
		&:hover {
			&.is-invalid {
				border-color: $input-color-interactive-invalid;

				& ~ .select-icon {
					color: $input-color-interactive-invalid;
				}
			}
		}

		&[disabled] {
			& ~ .select-icon {
				color: $input-disabled-color;
			}
		}
	}
}

// File input
.custom-file {
	width: auto;
	margin-bottom: ( $spacer / 2 );
}

.custom-file-input {
	position: absolute;
	line-height: 1;
	z-index: $zindex-form-file-input;

	&:focus:not(disabled) ~ .custom-file-label {
		text-decoration: underline;
	}

	&:disabled ~ .custom-file-label {
		color: $disabled;

		&:hover,
		&:active {
			text-decoration: none;
			cursor: default;
		}
	}
}

.custom-file-label {
	position: relative;
	margin-bottom: 0;
	color: $link-color;
	border: none;
	box-shadow: none;
	text-decoration: $link-decoration;
	padding: 0;

	&::after {
		display: none;
	}

	&:hover,
	&:active {
		text-decoration: $link-hover-decoration;
		cursor: pointer;
	}
}

.input-subtext {
	margin-top: ( $spacer / 4 );
	font-size: $small-font-size;

	.form-group,
	.custom-control {
		margin-bottom: 0;
	}

	&--disabled {
		color: $input-disabled-color;
	}
}
