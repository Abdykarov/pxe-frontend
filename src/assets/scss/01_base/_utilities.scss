/*
 -	Theme utilities
 */

// Set text size to 12px, (1rem = 16px)
.font-size-12 {
	font-size: .75rem;
}

// Set text size to 13px, (1rem = 16px)
.font-size-13 {
	font-size: .8125rem;
}

// Set text size to 14px, (1rem = 16px)
.font-size-14 {
	font-size: .875rem;
}

.link {
	@include link-without-href {
		cursor: pointer;
		display: inline-block;
		color: $link-color;
		border-color: $link-color;
		text-decoration: $link-decoration;
	}

	@include link-without-href-interactive {
		color: $link-hover-color;
		text-decoration: $link-hover-decoration;
	}

	&--white {
		&,
		&:visited,
		&:focus,
		&:hover {
			color: $white;
		}
	}

	&--interactive-revert {
		&,
		&:visited {
			text-decoration: $link-hover-decoration;
		}

		&:focus,
		&:hover {
			text-decoration: $link-decoration;
		}
	}

	&--logout {
		&.dropdown-item,
		.navigation-main__link {
			@include link-without-href-self {
				background-color: rgba($secondary, .05);
			}

			&:focus,
			&:hover,
			&:active {
				background-color: rgba($secondary, .15);
			}
		}
	}

	&--disabled {
		opacity: .4;
		pointer-events: none;
	}
}

.cursor-pointer {
	cursor: pointer;
}

.text-with-icon {
	display: flex;
	align-items: center;
	margin-bottom: $spacer;

	& &__icon {
		color: $icons-primary;
		font-size: $icon-size-large;

		&--public {
			font-size: $font-size-base-public;
		}
	}

	&__text {
		margin-left: ( $spacer / 2 );
	}

	&--link {
		@include link-without-href-interactive {
			text-decoration: none;

			.text-with-icon__text {
				text-decoration: underline;
			}
		}

		.text-with-icon__icon {
			color: $font-text;
		}

		.text-with-icon__icon:not(.text-with-icon__icon--public) {
			font-size: $small-font-size;
		}
	}

	&--icon-right {
		.text-with-icon__text {
			margin-left: 0;
			margin-right: ( $spacer / 2 );
		}
	}
}

.green-energy {
	display: flex;
	flex-direction: row;
	align-items: center;

	& &__icon {
		margin-right: ( $spacer / 2 );
		color: $icons-green;
		font-size: 1rem;
		font-weight: 700;
	}

	&__text {
		font-size: $small-font-size;
		line-height: $line-height-sm;
		text-transform: uppercase;
		text-align: center;
	}
}

//
// Overwriting default - Extend new definition `table-row-group` for default Bootstrap
//
// Utilities for common `display` values
//
/* stylelint-disable declaration-no-important */
@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		.d#{$infix}-none {
			display: none !important;
		}

		.d#{$infix}-inline {
			display: inline !important;
		}

		.d#{$infix}-inline-block {
			display: inline-block !important;
		}

		.d#{$infix}-block {
			display: block !important;
		}

		.d#{$infix}-table {
			display: table !important;
		}

		.d#{$infix}-table-row {
			display: table-row !important;
		}

		.d#{$infix}-table-cell {
			display: table-cell !important;
		}

		// new added definition
		.d#{$infix}-table-row-group {
			display: table-row-group !important;
		}

		.d#{$infix}-flex {
			display: flex !important;
		}

		.d#{$infix}-inline-flex {
			display: inline-flex !important;
		}
	}
}
/* stylelint-enable */



/*
 *  Colors utilities via properties generator
 */

$colors: (
	blue-050:                      $blue-050,
	blue-100:                      $blue-100,
	blue-200:                      $blue-200,
	blue-300:                      $blue-300,
	blue-400:                      $blue-400,
	blue-500:                      $blue-500,
	gray-000:                      $gray-000,
	gray-050:                      $gray-050,
	gray-100:                      $gray-100,
	gray-150:                      $gray-150,
	gray-200:                      $gray-200,
	gray-300:                      $gray-300,
	gray-400:                      $gray-400,
	gray-500:                      $gray-500,
	gray-600:                      $gray-600,
	gray-1000:                     $gray-1000,
	white:                         $white,
	black:                         $black,
	primary:                       $primary,
	primary-dark:                  $primary-dark,
	secondary:                     $secondary,
	secondary-dark:                $secondary-dark,
	success-lighten:               $success-lighten,
	success:                       $success,
	success-dark:                  $success-dark,
	success-darken:                $success-darken,
	warning-lighten:               $warning-lighten,
	warning:                       $warning,
	warning-dark:                  $warning-dark,
	warning-darken:                $warning-darken,
	danger-lighten:                $danger-lighten,
	danger:                        $danger,
	danger-dark:                   $danger-dark,
	danger-darken:                 $danger-darken,
	light:                         $light,
	light-dark:                    $light-dark,
	light-darken:                  $light-darken,
	body:                          $body-bg,
	body-lp:                       $body-bg-lp,
	disabled:                      $disabled,
	icons-primary:                 $icons-primary,
	icons-active:                  $icons-active,
	icons-inactive:                $icons-inactive,
	gradient-blue-light:           $gradient-blue-light,
	gradient-blue-dark:            $gradient-blue-dark,
	gradient-blue-darken:          $gradient-blue-darken,
	gradient-violet-light:         $gradient-violet-light,
);

@each $name, $value in $colors {
	.bg--#{$name} {
		background-color: $value;
	}

	.text-color--#{$name} {
		color: $value;
	}

	.fill--#{$name} {
		fill: $value;
	}
}

/*
 *	Gradients mixins
 */

@mixin generate-gradient($name-color, $start-color, $end-color) {
	.bg--gradient-#{$name-color} {
		background: linear-gradient(143deg, $start-color 0%, $end-color 100%);
	}
}

@include generate-gradient(blue, $gradient-blue-light, $gradient-blue-dark);
@include generate-gradient(violet, $gradient-violet-light, $gradient-blue-darken);


/*
 *	Progress bar classes for width in % units
 */

@mixin generate-progress($dimension: width, $class: progress) {
	$i: 0;
	$n: 100;

	@while $i <= $n {
		.#{$class}--#{$i} {
			#{$dimension}: ($i * 100% / $n);
		}

		$i: $i + 1;
	}
}

/* Generate progress bars */
@include generate-progress;                              // width
@include generate-progress(height, progress-h);          // height



/*
 *	Animation slide to right
 */

@keyframes slideToRightFaster {
	from {
		transform: translate3d(10%, 0, 0);
		opacity: 0;
		visibility: visible;
	}

	to {
		transform: translate3d(0, 0, 0);
		opacity: 1;
	}
}

@keyframes slideToRightSlower {
	from {
		transform: translate3d(20%, 0, 0);
		opacity: 0;
		visibility: visible;
	}

	to {
		transform: translate3d(0, 0, 0);
		opacity: 1;
	}
}

.fixed-bottom--footer-indentation {
	bottom: 60px;
	left: 50%;
	right: auto;
	transform: translateX(-50%);
}

.bg-body {
	background-color: $body-bg;
}

.box-shadow {
	box-shadow: $box-shadow;
}

.video {
	position: relative;

	&__holder {
		position: relative;
		margin-bottom: $spacer;

		// Media queries
		@include media-breakpoint-up(md) {
			margin-bottom: 0;
		}
	}

	&__text {
		pointer-events: none;

		// Media queries
		@include media-breakpoint-up(md) {
			@include absolute-center;
			margin-top: 0;
		}
	}

	&__control {
		margin-bottom: $spacer;

		// Media queries
		@include media-breakpoint-down(xs) {
			@include absolute-center;
		}
	}
}

.info-flag {
	position: relative;
	display: inline-block;
	padding: $spacer ( $spacer * 1.25 );
	background-color: $secondary;
	border-radius: $border-radius;
	border-bottom-left-radius: 0;

	// Media queries
	@include media-breakpoint-up(md) {
		margin-top: ( $spacer * 2 );
	}

	&__beak {
		position: absolute;
		top: calc( 100% - 1px );
		left: 0;
	}

	&__img {
		width: 92px;
	}
}
