/*
 -	Theme mixins
 -
 -	This file defines new mixins and extends standards mixins from Bootstrap.
 */

/*
 -	Font-size mixin
 -
 -	Mixin for rem font sizing with fallback, use it with only if you need browser support < IE11
 -	@param {Number} [size-value] - Size of text
 */

// @mixin font-size($size-value: 16) {
// 	font-size: $size-value + px;
// 	font-size: ($size-value / 10) + rem;
// }


/*
 -  Disabled outline
 */

@mixin clear-outline() {
	outline: none;
	outline: 0;
}


/*
 -  Smart shorthand text
 */

@mixin smart-short-text() {
	@include text-truncate;
}


/*
 -  Placeholder
 -
 -  Change color of font in placeholder for input
 -  @param {HEX Color} [color]
 */

@mixin placeholder($color) {
	/* WebKit browsers */
	&::-webkit-input-placeholder {
		color: $color;
	}

	/* Mozilla Firefox 4 to 18 */
	&:-moz-placeholder {
		color: $color;
	}

	/* Mozilla Firefox 19+ */
	&::-moz-placeholder {
		color: $color;
	}

	/* Internet Explorer 10+ */
	&:-ms-input-placeholder {
		color: $color;
	}
}


/*
 -  Icons
 -
 */

@mixin icon() {
	/* stylelint-disable-next-line font-family-no-missing-generic-family-keyword, declaration-no-important */
	font-family: 'icons' !important;
	speak: none;
	font-style: normal;
	font-weight: 400;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	font-size: $icon-size;
}


/*
 -  Selection Style
 -
 -  Change appearence of highlighted text
 -  @param {HEX Color} [highlight-color]
 -  @param {HEX Color} [font-color]
 */

@mixin selection($highlight-color: $black, $font-color: $white) {
	::selection {
		background-color: $highlight-color;
		color: $font-color;
	}

	::-moz-selection {
		background-color: $highlight-color;
		color: $font-color;
	}
}


/*
 -	Reset parameters padding and margin
 -	@param {Number} [value=0] - Set padding and margin to all sides
 */

@mixin reset-pa-ma($value: 0) {
	padding: $value;
	margin: $value;
}


/*
 -	Re-set default list options
 -	@param {String} [style=none] - Set list style type
 -	@param {Number} [padding=0] - Set padding
 -	@param {Number} [margin=0] - Set margin
 */

@mixin reset-list($style: none, $padding: 0, $margin: 0) {
	list-style: $style;
	padding: $padding;
	margin: $margin;
}


/*
 -	Micro-clearfix method
 */

@mixin after-clear() {
	&::after {
		clear: both;
		content: '';
		display: block;
		height: 0;
	}
}


/*
 -	Font-face declaration for custom typography
 -	@param {String} [font-name] - Name of the font family
 -	@param {url} [file-name] - URL address for font files
 -	@param {Number} [weight=400] - Weight or boldness of the font
 -	@param {String} [style=normal] - Face of the font-family (normal, italic or oblique)
 */

@mixin font-face($font-name, $file-name, $weight: 400, $style: normal) {
	@font-face {
		font-family: quote($font-name);
		// src: url($file-name + '.eot');
		src: url($file-name + '.ttf')  format('truetype');
		// url($file-name + '.woff') format('woff'),
		// url($file-name + '.eot?#iefix')  format('embedded-opentype'),
		// url($file-name + '.svg##{$font-name}')  format('svg');
		font-weight: $weight;
		font-style: $style;
		font-display: fallback;
	}
}


/*
 -	Absolute positioning of element to the center
 -	@param {Boolean} [vertical=true] - Vertical positioning of the element
 -	@param {Boolean} [horizontal=true] - Horizontal positioning of the element
 */

@mixin absolute-center($vertical: true, $horizontal: true) {
	position: absolute;
	display: block;

	@if $vertical == true and $horizontal == false {
		top: 50%;
		transform: translateY(-50%);
	} @else if $horizontal == true and $vertical == false {
		left: 50%;
		transform: translateX(-50%);
	} @else if $horizontal == true and $vertical == true {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}


/*
 -	Center positioning of the block content
 -	@param {String} [mode=row] - Direction of block elements in flex box (row or column)
 -	@param {Boolean} [vertical=true] - Vertical positioning of the element
 -	@param {Boolean} [horizontal=true] - Horizontal positioning of the element
 */

// @mixin center-content($mode: row, $horizontal: true, $vertical: true) {
// 	display: flex;
// 	flex-direction: $mode;

// 	@if $mode == row {
// 		@if $vertical == true and $horizontal == false {
// 			align-items: center;
// 		} @else if $horizontal == true and $vertical == false {
// 			justify-content: center;
// 		} @else if $horizontal == true and $vertical == true {
// 			justify-content: center;
// 			align-items: center;
// 		}
// 	} @else if $mode == column {
// 		@if $vertical == true and $horizontal == false {
// 			justify-content: center;
// 		} @else if $horizontal == true and $vertical == false {
// 			align-items: center;
// 		} @else if $horizontal == true and $vertical == true {
// 			justify-content: center;
// 			align-items: center;
// 		}
// 	}
// }


@mixin button-ghost-color($color) {
	&:focus,
	&.focus,
	&:hover,
	&:active,
	&:focus:active,
	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active {
		background-color: transparent;
		color: $color;
		border-color: $color;
	}

	&:focus,
	&.focus,
	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active {
		box-shadow: $btn-focus-box-shadow-size $color;
	}
}


/*
 -	Reset parameters padding and margin
 -	@param {Number} [value=0] - Set padding and margin to all sides
 */

@mixin overlayer($height: 100%, $position: fixed, $subElement: before) {
	position: relative;
	height: $height;

	@if $position == fixed {
		overflow: hidden;
	}

	&::#{$subElement} {
		content: '';
		position: $position;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: rgba($modal-backdrop-bg, $modal-backdrop-opacity);
		z-index: $zindex-body-overlayer;
	}
}


/*
 - Mixin for link
 */

@mixin link() {
	&,
	&:visited {
		@content;
	}
}

@mixin link-interactive() {
	&.focus,
	&:focus,
	&:hover {
		@content;
	}
}


/*
 - Mixin for link without [href]
 */

@mixin link-without-href() {
	&,
	&:visited,
	&:not([href]):not([tabindex]),
	&:not([href]):not([tabindex]):visited {
		@content;
	}
}

@mixin link-without-href-self() {
	& {
		@content;
	}

	@include link-without-href {
		@content;
	}
}

@mixin link-without-href-interactive() {
	&.focus,
	&:focus,
	&:hover,
	&:not([href]):not([tabindex]):not(.active).focus,
	&:not([href]):not([tabindex]):not(.active):focus,
	&:not([href]):not([tabindex]):not(.active):hover {
		@content;
	}
}

@mixin link-without-href-interactive-self() {
	& {
		@content;
	}

	@include link-without-href-interactive {
		@content;
	}
}
